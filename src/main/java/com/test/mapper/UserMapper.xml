<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
1.命名空间配置全局唯一包名+文件名
2.配置Mapped Statement
3. statement 配置
id 值声明statement 编号同一命名空间(同一文件)下不可重复
parameterType 输入参数即占位符的数据类型类型可以是基本数据类型,字符
串,java bean ,map,list 等
resultType 输出结果类型可以是基本数据类型,字符串,java bean,map 等
statement 描述即待执行的sql
#{id} 占位符变量名为id/value 均可${value} 变量名必须为value 字符
串拼接形式无法避免sql 注入
-->
<mapper namespace="com.test.mapper.UserMapper">
    <select id="queryUserById" parameterType="int"
            resultType="user">
          select id,user_name as userName,user_pwd as userPwd from user where id=#{id}
    </select>

    <!--添加不返回id-->
    <insert id="addUser" parameterType="user">
INSERT INTO user (user_name, user_pwd, real_name, nation, card_id)
VALUES ( #{userName}, #{userPwd}, #{realName}, #{nation}, #{cardId});
    </insert>

    <!--添加返回id-->
    <insert id="addUserHasKey" parameterType="user">
        <selectKey keyProperty="id" order="AFTER" resultType="int">
            select LAST_INSERT_ID() as id
        </selectKey>
        INSERT INTO user (user_name, user_pwd, real_name, nation, card_id)
        VALUES ( #{userName}, #{userPwd}, #{realName}, #{nation}, #{cardId});
    </insert>

    <!--添加返回id(通用版)-->
    <insert id="addUserHasKeyGeneral" parameterType="user" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user (user_name, user_pwd, real_name, nation, card_id)
        VALUES ( #{userName}, #{userPwd}, #{realName}, #{nation}, #{cardId});
    </insert>

    <!--批量添加用户-->
    <insert id="addUserBatch" parameterType="list">
        INSERT INTO user (user_name, user_pwd, real_name, nation, card_id) 
        VALUES
        <foreach collection="list" item="item" separator=",">
             ( #{item.userName}, #{item.userPwd}, #{item.realName}, #{item.nation}, #{item.cardId})
        </foreach>
    </insert>

    <!--更新用户信息-->
    <update id="updateUser" parameterType="user">
      UPDATE user SET
      user_name = #{userName}, user_pwd = #{userPwd}, real_name = #{realName}
       WHERE id = #{id}
    </update>

    <!--批量更新用户数据-->
    <update id="updateUserBatch" >
      UPDATE user SET user_pwd = '123456'
       WHERE
        id  in (
         <foreach collection="array" item="item" separator=",">
           #{item}
       </foreach>
       )
    </update>

    <!--删除-->
    <delete id="deleteUser" parameterType="int">
        delete from user where id=#{id}
    </delete>

    <!--批量删除-->
    <delete id="deleteUserBatch" parameterType="list">
        delete from user where id
        in (
        <foreach collection="list" item="item" separator=",">
            #{item}
        </foreach>
        )
    </delete>

</mapper>